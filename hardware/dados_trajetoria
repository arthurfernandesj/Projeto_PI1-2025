//teste
#include <TinyGPS++.h>
#include <HardwareSerial.h>
#include <Wire.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <WiFi.h>
#include <WebServer.h>

// === Wi-Fi ===
const char* ssid = "SEU_WIFI";
const char* password = "SUA_SENHA";
WebServer server(80);

// === Instâncias ===
TinyGPSPlus gps;
HardwareSerial gpsSerial(1);
Adafruit_MPU6050 mpu;

// === Offsets do giroscópio ===
float gyro_offset_x = 0, gyro_offset_y = 0, gyro_offset_z = 0;

// === Variáveis dos sensores ===
double latitude = 0, longitude = 0, altitude = 0, velocidade = 0;
float gx_corr = 0, gy_corr = 0, gz_corr = 0;
int sats = 0;

// === Calibração ===
void calibrarGiroscopio() {
  sensors_event_t a, g, temp;
  Serial.println("Calibrando giroscópio...");

  for (int i = 0; i < 100; i++) {
    mpu.getEvent(&a, &g, &temp);
    gyro_offset_x += g.gyro.x;
    gyro_offset_y += g.gyro.y;
    gyro_offset_z += g.gyro.z;
    delay(10);
  }

  gyro_offset_x /= 100;
  gyro_offset_y /= 100;
  gyro_offset_z /= 100;

  Serial.println("Calibração concluída.");
}

// === Página web ===
void handleRoot() {
  String valores =
    String(latitude, 6) + "," +
    String(longitude, 6) + "," +
    String(altitude, 2) + "," +
    String(velocidade, 2) + "," +
    String(gx_corr, 2) + "," +
    String(gy_corr, 2) + "," +
    String(gz_corr, 2);

  String html = "<html><head><meta http-equiv='refresh' content='1'></head><body>";
  html += "<h2>Dados do Foguete</h2>";
  html += "<b>Latitude:</b> " + String(latitude, 6) + "<br>";
  html += "<b>Longitude:</b> " + String(longitude, 6) + "<br>";
  html += "<b>Altitude:</b> " + String(altitude, 2) + " m<br>";
  html += "<b>Velocidade:</b> " + String(velocidade, 2) + " m/s<br>";
  html += "<b>Satélites:</b> " + String(sats) + "<br><br>";
  html += "<b>Giroscópio (°/s)</b><br>";
  html += "X: " + String(gx_corr, 2) + " | Y: " + String(gy_corr, 2) + " | Z: " + String(gz_corr, 2) + "<br><br>";
  html += "<b>Dados compactos:</b><br>" + valores;
  html += "</body></html>";

  server.send(200, "text/html", html);
}

// === Setup ===
void setup() {
  Serial.begin(115200);
  gpsSerial.begin(9600, SERIAL_8N1, 16, 17);

  // MPU
  if (!mpu.begin()) {
    Serial.println("Erro: MPU6050 não detectado!");
    while (1);
  }
  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
  mpu.setGyroRange(MPU6050_RANGE_500_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);
  calibrarGiroscopio();

  // Wi-Fi
  Serial.print("Conectando-se ao WiFi: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConectado! IP: " + WiFi.localIP().toString());

  // Servidor
  server.on("/", handleRoot);
  server.begin();
}

// === Loop principal ===
void loop() {
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);

  gx_corr = g.gyro.x - gyro_offset_x;
  gy_corr = g.gyro.y - gyro_offset_y;
  gz_corr = g.gyro.z - gyro_offset_z;

  while (gpsSerial.available()) {
    gps.encode(gpsSerial.read());

    if (gps.location.isUpdated()) {
      latitude = gps.location.lat();
      longitude = gps.location.lng();
      altitude = gps.altitude.meters();
      velocidade = gps.speed.mps();
      sats = gps.satellites.value();

      Serial.println(String(latitude, 6) + ", " + String(longitude, 6) + ", " + String(altitude, 2));
    }
  }

  server.handleClient(); // Atende requisições web
}
